package com.saitejn.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.saitejn.pojo.Test;
import com.saitejn.services.TestServices;
import com.saitejn.util.WordGenerator;

import java.io.File;  
import java.io.FileInputStream;  
import java.io.IOException;  
import java.io.InputStream;  
import java.util.Enumeration;  
import java.util.HashMap;  
import java.util.Map;  
import java.util.UUID;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
@Controller
public class TestController {
	@Autowired
	private TestServices testServices;
	/**
	 * 测试控制类
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("/test")
	public String testcontection(Model model )throws Exception{
		Test test = testServices.getTestById(3);
		model.addAttribute("test", test);
		return  "testword";
	}
	@RequestMapping("/sendemail")
	public String testsendemail(Model model )throws Exception{
		
		return  "registerEmailValidae";
	}
	@RequestMapping("/dotest")
	public void testcontdoection(Model model,HttpServletRequest req, HttpServletResponse resp )throws Exception{
		 Map<String, Object> map = new HashMap<String, Object>();  
	        Enumeration<String> paramNames = req.getParameterNames();  
	        // 通过循环将表单参数放入键值对映射中  
	        while(paramNames.hasMoreElements()) {  
	            String key = paramNames.nextElement();  
	            String value = req.getParameter(key);  
	            map.put(key, value);  
	        }  
	      
	        // 提示：在调用工具类生成Word文档之前应当检查所有字段是否完整  
	        // 否则Freemarker的模板殷勤在处理时可能会因为找不到值而报错 这里暂时忽略这个步骤了  
	        File file = null;  
	        InputStream fin = null;  
	        ServletOutputStream out = null;  
	        try {  
	            // 调用工具类WordGenerator的createDoc方法生成Word文档  
	            file = WordGenerator.createDoc(map, "resume");  
	            fin = new FileInputStream(file);  
	              
	            resp.setCharacterEncoding("utf-8");  
	            resp.setContentType("application/msword");  
	            // 设置浏览器以下载的方式处理该文件默认名为resume.doc  
	            resp.addHeader("Content-Disposition", "attachment;filename=resume.doc");  
	              
	            out = resp.getOutputStream();  
	            byte[] buffer = new byte[512];  // 缓冲区  
	            int bytesToRead = -1;  
	            // 通过循环将读入的Word文件的内容输出到浏览器中  
	            while((bytesToRead = fin.read(buffer)) != -1) {  
	                out.write(buffer, 0, bytesToRead);  
	            }  
	        } finally {  
	            if(fin != null) fin.close();  
	            if(out != null) out.close();  
	            if(file != null) file.delete(); // 删除临时文件  
	        }  
		
	}
	
	
	@RequestMapping("/myjsp")
	public String myjsp(){
		return "jf/MyJsp";
	}
	
	@RequestMapping("/test_jf_upload")
	public String test_jf_upload()throws Exception{
		return "jf/test_jf_upload";
	}
	@RequestMapping("/dotestupload")
	public void dotestupload(@RequestParam("file") MultipartFile[] file)throws Exception{
		for(int i = 0; i<file.length;i++){
			String file_path = "E:\\myeclipse10\\upload\\temp\\file\\test\\";
			//获取每一个原始文件的文件名
			String OriginalFilename = file[i].getOriginalFilename();
			//新的文件名
			String newFileName = UUID.randomUUID()+OriginalFilename.substring(OriginalFilename.lastIndexOf("."));
			//新文件
			File newFile = new File(file_path+newFileName);
			//将内存中的数据写入磁盘
			file[i].transferTo(newFile);
			System.out.println("=================="+file[i].getName()+"==============");
		}
	}

}
